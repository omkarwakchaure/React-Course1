{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.counter++;\n    },\n    increase: (state, action) => {\n      state.counter += action.payload;\n    },\n    decrement: state => {\n      state.counter--;\n    },\n    toggle: state => {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login: state => {\n      state.isAuthenticated = true;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","increase","action","payload","decrement","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","authActions","actions","counterActions"],"sources":["C:/Users/omkarw/OneDrive/reactjs-data/reactjs-Mitr/15-redux-basic/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.counter++;\r\n    },\r\n    increase: (state, action) => {\r\n      state.counter += action.payload;\r\n    },\r\n    decrement: (state) => {\r\n      state.counter--;\r\n    },\r\n    toggle: (state) => {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login: (state) => {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQ,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3BF,KAAK,CAACN,OAAO,IAAIQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,SAAS,EAAGJ,KAAK,IAAK;MACpBA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDW,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AACnB,CAAC;AACD,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC5BK,IAAI,EAAE,gBAAgB;EACtBJ,YAAY,EAAEa,gBAAgB;EAC9BR,QAAQ,EAAE;IACRW,KAAK,EAAGT,KAAK,IAAK;MAChBA,KAAK,CAACO,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDG,MAAM,EAAGV,KAAK,IAAK;MACjBA,KAAK,CAACO,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IAAElB,OAAO,EAAEE,YAAY,CAACgB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAQ;AACpE,CAAC,CAAC;AAEF,OAAO,MAAME,WAAW,GAAGN,SAAS,CAACO,OAAO;AAC5C,OAAO,MAAMC,cAAc,GAAGpB,YAAY,CAACmB,OAAO;AAClD,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}